// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// find_constants
LogicalVector find_constants(NumericMatrix x);
RcppExport SEXP adeba_find_constants(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    __result = Rcpp::wrap(find_constants(x));
    return __result;
END_RCPP
}
// is_constant
LogicalVector is_constant(NumericVector x);
RcppExport SEXP adeba_is_constant(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(is_constant(x));
    return __result;
END_RCPP
}
// get_bandwidths
NumericMatrix get_bandwidths(NumericVector pilot, NumericVector alpha, NumericVector beta);
RcppExport SEXP adeba_get_bandwidths(SEXP pilotSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type pilot(pilotSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    __result = Rcpp::wrap(get_bandwidths(pilot, alpha, beta));
    return __result;
END_RCPP
}
